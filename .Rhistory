plot(CORN_in$Date, CORN_in$Volume, type = "l")
plot(CORN_in$Date, CORN_in$logVolume, type = "l")
plot(CORN_in$Date, CORN_in$logTurnover, type = "l")
plot(USO_in$Date, USO_in$Volume)
plot(USO_in$Date, USO_in$Volume, type = "l")
dev.off()
plot(USO_in$Date, USO_in$Volume, type = "l")
plot(USO_in$Date, log(USO_in$Volume), type = "l")
library("tidyverse")
plot(USO_in$Date, log(USO_in$Volume/lag(USO_in$Volume)), type = "l")
tseries::adf.test(log(USO_in$Volume/lag(USO_in$Volume)))
tseries::adf.test(na.omit(log(USO_in$Volume/lag(USO_in$Volume)))
tseries::adf.test(na.omit(log(USO_in$Volume/lag(USO_in$Volume))))
tseries::adf.test(na.omit(log(USO_in$Volume/lag(USO_in$Volume))))
stats::Box.test(na.omit(log(USO_in$Volume/lag(USO_in$Volume))), type = "Ljung-Box", lag = 20)
urca::ur.kpss(log(USO_in$Volume))
summary(urca::ur.kpss(log(USO_in$Volume)))
urca::ur.kpss(log(USO_in$Volume)) %>% summary()
urca::ur.kpss(log(USO_in$Volume))
test <- urca::ur.kpss(log(USO_in$Volume))
summary(test)
library(urca)
test <- ur.kpss(log(USO_in$Volume))
summary(test)
test <- ur.kpss(log(CORN_in$Volume))
summary(test)
test <- ur.kpss(log(WEAT_in$Volume))
summary(test)
test <- ur.kpss(log(SOYB_in$Volume))
summary(test)
test <- ur.kpss(log(UGA_in$Volume))
summary(test)
plot(CORN_in$Date, CORN_in$logTurnover, type = "l")
plot(CORN_in$Date, CORN_in$logVolume, type = "l")
plot(CORN_in$Date, CORN_in$logTurnover, type = "l")
test <- ur.kpss(log(UGA_in$Volume/lag(UGA_in$Volume)))
summary(test)
tseries::adf.test(log(SOYB_in$Volume))
# Volatility Scratch Pad
# Colburn Hassman
# January 21, 2021
# Meant to explore volatility data and make sure specification is good
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN_in <- na.omit(data_pull_in("CORN"))
SOYB_in <- na.omit(data_pull_in("SOYB"))
WEAT_in <- na.omit(data_pull_in("WEAT"))
USO_in <- na.omit(data_pull_in("USO"))
UGA_in <- na.omit(data_pull_in("UGA"))
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Close
}
# Volatility Scratch Pad
# Colburn Hassman
# January 21, 2021
# Meant to explore volatility data and make sure specification is good
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN <- na.omit(data_pull_in("CORN"))
SOYB <- na.omit(data_pull_in("SOYB"))
WEAT <- na.omit(data_pull_in("WEAT"))
USO <- na.omit(data_pull_in("USO"))
UGA <- na.omit(data_pull_in("UGA"))
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Close
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Close
}
CORN <- add_vol(CORN)
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Price
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Price
return(data)
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
# Volatility Scratch Pad
# Colburn Hassman
# January 21, 2021
# Meant to explore volatility data and make sure specification is good
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN <- na.omit(data_pull_in("CORN"))
SOYB <- na.omit(data_pull_in("SOYB"))
WEAT <- na.omit(data_pull_in("WEAT"))
USO <- na.omit(data_pull_in("USO"))
UGA <- na.omit(data_pull_in("UGA"))
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Price
return(data)
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
UGA <- add_vol(UGA)
View(CORN)
plot_vol(CORN)
plot_vol <- function(data){
plot(data$Date, dataTvol, type = 'l')
}
plot_vol(CORN)
plot_vol <- function(data){
plot(data$Date, data$vol, type = 'l')
}
plot_vol(CORN)
plot_vol(CORN)
plot_vol(SOYB)
plot_vol(WEAT)
plot_vol(USO)
plot_vol(UGA)
vol_test <- function(data){
tseries::adf.test(data$vol)
urca::ur.kpss(data$vol)
}
vol_test(CORN)
vol_test <- function(data){
print(tseries::adf.test(data$vol))
print(urca::ur.kpss(data$vol))
}
vol_test(CORN)
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN <- na.omit(data_pull_in("CORN"))
SOYB <- na.omit(data_pull_in("SOYB"))
WEAT <- na.omit(data_pull_in("WEAT"))
USO <- na.omit(data_pull_in("USO"))
UGA <- na.omit(data_pull_in("UGA"))
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Price
return(data)
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
UGA <- add_vol(UGA)
plot_vol <- function(data){
plot(data$Date, data$vol, type = 'l')
}
plot_vol(CORN)
plot_vol(SOYB)
plot_vol(WEAT)
par(mfrow = c(3, 2))
plot_vol(CORN)
plot_vol(SOYB)
plot_vol(WEAT)
plot_vol(USO)
plot_vol(UGA)
plot_vol <- function(data){
plot(data$Date, data$per_etf_return, type = 'l')
}
par(mfrow = c(3, 2))
plot_vol(CORN, main = "")
par(mfrow = c(3, 2))
plot_vol(CORN, main = "ETF Returns")
plot_vol(CORN)
plot_vol <- function(data){
plot(data$Date, data$per_etf_returns, type = 'l')
}
par(mfrow = c(3, 2))
plot_vol(CORN)
plot_vol(SOYB)
plot(data$Date, data$per_ETF_returns, type = 'l')
plot_vol <- function(data){
plot(data$Date, data$per_ETF_returns, type = 'l')
}
par(mfrow = c(3, 2))
plot_vol(CORN)
plot_vol(SOYB)
View(CORN)
plot_vol <- function(data){
plot(data$Date, data$per_ETF_return, type = 'l')
}
par(mfrow = c(3, 2))
plot_vol(CORN)
plot_vol(SOYB)
plot_vol(WEAT)
plot_vol(USO)
plot_vol(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$per_ETF_return, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "ETF Returns: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
plot_vol <- function(data, title){
plot(data$Date, data$vol, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "ETF Interday Range: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_vol <- function(data){
data$vol <- log(data$High/data$Low)
return(data)
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
UGA <- add_vol(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$vol, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "ETF Interday Range: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
par(mfrow = c(3, 2))
plot_vol(CORN, "Log High/Low: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_vol <- function(data){
data$vol <- (data$High - data$Low) / data$Low
return(data)
}
CORN <- add_vol(CORN)
SOYB <- add_vol(SOYB)
WEAT <- add_vol(WEAT)
USO <- add_vol(USO)
UGA <- add_vol(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$vol, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Highest Interday Return: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN_in <- na.omit(data_pull_in("CORN"))
SOYB_in <- na.omit(data_pull_in("SOYB"))
WEAT_in <- na.omit(data_pull_in("WEAT"))
USO_in <- na.omit(data_pull_in("USO"))
library("tidyverse")
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN_in <- na.omit(data_pull_in("CORN"))
SOYB_in <- na.omit(data_pull_in("SOYB"))
WEAT_in <- na.omit(data_pull_in("WEAT"))
USO_in <- na.omit(data_pull_in("USO"))
UGA_in <- na.omit(data_pull_in("UGA"))
CORN_in$Turnover <- CORN_in$Price * CORN_in$Volume
SOYB_in$Turnover <- SOYB_in$Price * SOYB_in$Volume
WEAT_in$Turnover <- WEAT_in$Price * WEAT_in$Volume
USO_in$Turnover <- USO_in$Price * USO_in$Volume
UGA_in$Turnover <- UGA_in$Price * UGA_in$Volume
plot_vol <- function(data, title){
plot(data$Date, data$Volume, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Highest Interday Return: CORN")
library("tidyverse")
# IMPORT DATA
# Drop first row (containing NAs from return calc)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN <- na.omit(data_pull_in("CORN"))
SOYB <- na.omit(data_pull_in("SOYB"))
WEAT <- na.omit(data_pull_in("WEAT"))
USO <- na.omit(data_pull_in("USO"))
UGA <- na.omit(data_pull_in("UGA"))
CORN$Turnover <- CORN$Price * CORN$Volume
SOYB$Turnover <- SOYB$Price * SOYB$Volume
WEAT$Turnover <- WEAT$Price * WEAT$Volume
USO$Turnover <- USO$Price * USO$Volume
UGA$Turnover <- UGA$Price * UGA$Volume
add_metric <- function(data){
data$metric <- (data$High - data$Low) / data$Low
return(data)
}
plot_vol <- function(data, title){
plot(data$Date, data$Volume, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Highest Interday Return: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
par(mfrow = c(3, 2))
plot_vol(CORN, "Volume: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
plot_vol <- function(data, title){
plot(data$Date, data$Turnover, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Volume: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
par(mfrow = c(3, 2))
plot_vol(CORN, "Turnover: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_metric <- function(data){
data$metric <- log(data$Volume)
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
WEAT <- add_metric(WEAT)
USO <- add_metric(USO)
UGA <- add_metric(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$metric, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Volume: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_metric <- function(data){
data$metric <- log(data$Turnover)
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
WEAT <- add_metric(WEAT)
USO <- add_metric(USO)
UGA <- add_metric(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$metric, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Volume: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_metric <- function(data){
data$metric <- log(data$Volume/lag(data$Volume))
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
WEAT <- add_metric(WEAT)
USO <- add_metric(USO)
UGA <- add_metric(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$metric, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Volume: CORN")
plot_vol(SOYB, "SOYB")
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Volume Difference: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_metric <- function(data){
data$metric <- log(data$Turnover/lag(data$Turnover))
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
WEAT <- add_metric(WEAT)
USO <- add_metric(USO)
UGA <- add_metric(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$metric, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Turnover Difference: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
dev.off()
par(mfrow = c(3, 2))
plot_vol(CORN, "Log Turnover Difference: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
add_metric <- function(data){
data$metric <- abs(data$per_ETF_return) / Turnover
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
add_metric <- function(data){
data$metric <- abs(data$per_ETF_return) / data$Turnover
return(data)
}
CORN <- add_metric(CORN)
SOYB <- add_metric(SOYB)
WEAT <- add_metric(WEAT)
USO <- add_metric(USO)
UGA <- add_metric(UGA)
plot_vol <- function(data, title){
plot(data$Date, data$metric, type = 'l', main = title)
}
par(mfrow = c(3, 2))
plot_vol(CORN, "Amihud Illiquidity: CORN")
plot_vol(SOYB, "SOYB")
plot_vol(WEAT, "WEAT")
plot_vol(USO, "USO")
plot_vol(UGA, "UGA")
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
SOYB <- data_pull_ex("SOYB")
plot(SOYB$DATE, SOYB$per_NAV_return- SOYB$per_asset_return, type = 'l')
SOYB$X <- SOYB$per_NAV_return - SOYB$per_asset_return
View(SOYB)
source("~/Documents/etf_tracking/Analysis/preprocessing.R")
CORN <- data_pull_in("CORN")
SOYB <- data_pull_in("SOYB")
WEAT <- data_pull_in("WEAT")
USO <- data_pull_in("USO")
UGA <- data_pull_in("UGA")
data <- list(CORN, SOYB, WEAT, USO, UGA)
View(CORN)
data <- list(CORN, SOYB, WEAT, USO, UGA)
# Define Base GARCH Model
base_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = FALSE))
library(rugarch)
# Define Base GARCH Model
base_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = FALSE))
for(x in list){
base_fit <- ugarchfit(data = x$TDa, spec = base_spec, solver = 'hybrid')
}
View(base_spec)
summary(base_fit)
for(x in list){
base_fit <- ugarchfit(data = x$TDa, spec = base_spec, solver = 'hybrid')
}
data <- list(CORN, SOYB, WEAT, USO, UGA)
for(x in list){
print(x)
base_fit <- ugarchfit(data = x$TDa, spec = base_spec, solver = 'hybrid')
}
for (x in list){
print(x)
base_fit <- ugarchfit(data = x$TDa, spec = base_spec, solver = 'hybrid')
}
primes_list <- list(2, 3, 5, 7, 11, 13)
# loop version 1
for (p in primes_list) {
print(p)
}
#Calculate Base
CORN_base <- ugarchfit(data = CORN$TDa, spec = base_spec, solver = 'hybrid')
SOYB_base <- ugarchfit(data = SOYB$TDa, spec = base_spec, solver = 'hybrid')
CORN <- na.omit(data_pull_in("CORN"))
SOYB <- na.omit(data_pull_in("SOYB"))
WEAT <- na.omit(data_pull_in("WEAT"))
USO <- na.omit(data_pull_in("USO"))
UGA <- na.omit(data_pull_in("UGA"))
# Define Base GARCH Model
base_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = FALSE))
#Calculate Base
CORN_base <- ugarchfit(data = CORN$TDa, spec = base_spec, solver = 'hybrid')
SOYB_base <- ugarchfit(data = SOYB$TDa, spec = base_spec, solver = 'hybrid')
WEAT_base <- ugarchfit(data = WEAT$TDa, spec = base_spec, solver = 'hybrid')
USO_base <- ugarchfit(data = USO$TDa, spec = base_spec, solver = 'hybrid')
UGA_base <- ugarchfit(data = UGA$TDa, spec = base_spec, solver = 'hybrid')
summary(CORN_base)
CORN_base
SOYB_base
WEAT_base
USO_base
UGA_base
# Define Base GARCH Model
base_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = FALSE),
distribution.model = 'std')
#Calculate Base
CORN_base <- ugarchfit(data = CORN$TDa, spec = base_spec, solver = 'hybrid')
SOYB_base <- ugarchfit(data = SOYB$TDa, spec = base_spec, solver = 'hybrid')
WEAT_base <- ugarchfit(data = WEAT$TDa, spec = base_spec, solver = 'hybrid')
USO_base <- ugarchfit(data = USO$TDa, spec = base_spec, solver = 'hybrid')
UGA_base <- ugarchfit(data = UGA$TDa, spec = base_spec, solver = 'hybrid')
CORN_base
SOYB_base
WEAT_base
USO_base
UGA_base
