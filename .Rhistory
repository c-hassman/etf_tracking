ggAcf(uso.s)
ggAcf(uga.s)
CORN.mean.ext_reg <- CORN.xts[, c('per_asset_return', 'volume_return')]
# Now I want to add two dummy variables: one if $ asset is positive and one if negative
CORN.mean.ext_reg$pos_ind <-  0
CORN.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN.mean.ext_reg$per_asset_return[i] > 0){
CORN.mean.ext_reg$pos_ind[i] <- 1
}
else if(CORN.mean.ext_reg[i] < 0){
CORN.mean.ext_reg$neg_ind[i] <- 1
}
}
CORN.mean.ext_reg <- as.matrix(CORN.mean.ext_reg)
# The variance equation has so many variables, I find it best to simply copy all
# and then remove the unnecessary ones
CORN.var.ext_reg <- CORN.xts
CORN.var.ext_reg$CORN_MID  <- NULL
CORN.var.ext_reg$`F1(.35)`  <- NULL
CORN.var.ext_reg$`F2(.3)`  <- NULL
CORN.var.ext_reg$`F3(.35)`  <- NULL
CORN.var.ext_reg$CORN_NAV  <- NULL
CORN.var.ext_reg$ROLL  <- NULL
CORN.var.ext_reg$`C Jan`  <- NULL
CORN.var.ext_reg$`C 2012`  <- NULL
CORN.var.ext_reg$etf_asset_error  <- NULL
CORN.var.ext_reg$per_NAV_return  <- NULL
CORN.var.ext_reg$asset_basket  <- NULL
CORN.var.ext_reg$per_asset_return  <- NULL
CORN.var.ext_reg$Volume  <- NULL
CORN.var.ext_reg$per_ETF_return <- NULL
CORN.var.ext_reg$volume_return <- NULL
corn.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,0),include.mean = TRUE,
external.regressors = CORN.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = CORN.var.ext_reg))
setbounds(corn.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
corn.full_fit <- ugarchfit(data = CORN.xts$etf_asset_error, spec = corn.full_model_spec)
corn.full_fit
corn.full_fit@fit[['robust.matcoef']]
devtools::install_github("ropensci/writexl")
setwd("G:/My Drive/3_Massa Research/Neff Paper/Working_Folder")
write_xlsx(robust_coef, "data")
library(writexl)
robust_coef <- corn.full_fit@fit[['robust.matcoef']]
write_xlsx(robust_coef, "data")
robust_coef <- as.Dataframe(corn.full_fit@fit[['robust.matcoef']])
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data")
write_xlsx(robust_coef, "data.xlsx")
corn.full_fit@fit[['robust.matcoef' -attr]]
corn.full_fit@fit[['robust.matcoef' "-attr"]]
View(CORN.mean.ext_reg)
View(CORN.mean.ext_reg)
View(CORN.var.ext_reg)
View(CORN.var.ext_reg)
corn.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,0),include.mean = TRUE,
external.regressors = CORN.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = CORN.var.ext_reg))
setbounds(corn.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
corn.full_fit <- ugarchfit(data = CORN.xts$etf_asset_error, spec = corn.full_model_spec)
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
corn.full_fit
View(CORN.var.ext_reg)
View(CORN.var.ext_reg)
View(CORN.mean.ext_reg)
View(CORN.mean.ext_reg)
CORN.mean.ext_reg$backward <- 0
CORN.mean.ext_reg <- CORN.xts[, c('per_asset_return', 'volume_return')]
# Now I want to add two dummy variables: one if $ asset is positive and one if negative
CORN.mean.ext_reg$pos_ind <-  0
CORN.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN.mean.ext_reg$per_asset_return[i] > 0){
CORN.mean.ext_reg$pos_ind[i] <- 1
}
else if(CORN.mean.ext_reg[i] < 0){
CORN.mean.ext_reg$neg_ind[i] <- 1
}
}
CORN.mean.ext_reg$backward <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN$`F2(.3)`[i] - CORN$`F1(.35)`[i] < 1){
CORN.mean.ext_reg$backward[i] <- 1
}
}
View(CORN.mean.ext_reg)
CORN.mean.ext_reg <- as.matrix(CORN.mean.ext_reg)
# The variance equation has so many variables, I find it best to simply copy all
# and then remove the unnecessary ones
CORN.var.ext_reg <- CORN.xts
CORN.var.ext_reg$CORN_MID  <- NULL
CORN.var.ext_reg$`F1(.35)`  <- NULL
CORN.var.ext_reg$`F2(.3)`  <- NULL
CORN.var.ext_reg$`F3(.35)`  <- NULL
CORN.var.ext_reg$CORN_NAV  <- NULL
CORN.var.ext_reg$ROLL  <- NULL
CORN.var.ext_reg$`C Jan`  <- NULL
CORN.var.ext_reg$`C 2012`  <- NULL
CORN.var.ext_reg$etf_asset_error  <- NULL
CORN.var.ext_reg$per_NAV_return  <- NULL
CORN.var.ext_reg$asset_basket  <- NULL
CORN.var.ext_reg$per_asset_return  <- NULL
CORN.var.ext_reg$Volume  <- NULL
CORN.var.ext_reg$per_ETF_return <- NULL
CORN.var.ext_reg$volume_return <- NULL
corn.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,0),include.mean = TRUE,
external.regressors = CORN.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = CORN.var.ext_reg))
setbounds(corn.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
corn.full_fit <- ugarchfit(data = CORN.xts$etf_asset_error, spec = corn.full_model_spec)
corn.full_fit
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
View(CORN.mean.ext_reg)
View(CORN.mean.ext_reg)
CORN.mean.ext_reg <- CORN.xts[, c('per_asset_return', 'volume_return')]
# Now I want to add two dummy variables: one if $ asset is positive and one if negative
CORN.mean.ext_reg$pos_ind <-  0
CORN.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN.mean.ext_reg$per_asset_return[i] > 0){
CORN.mean.ext_reg$pos_ind[i] <- 1
}
else if(CORN.mean.ext_reg[i] < 0){
CORN.mean.ext_reg$neg_ind[i] <- 1
}
}
CORN.mean.ext_reg$backward <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN$`F2(.3)`[i] - CORN$`F1(.35)`[i] < 1){
CORN.mean.ext_reg$backward[i] <- 1
}
}
CORN.mean.ext_reg <- as.matrix(CORN.mean.ext_reg)
# The variance equation has so many variables, I find it best to simply copy all
# and then remove the unnecessary ones
CORN.var.ext_reg <- CORN.xts
CORN.var.ext_reg$CORN_MID  <- NULL
CORN.var.ext_reg$`F1(.35)`  <- NULL
CORN.var.ext_reg$`F2(.3)`  <- NULL
CORN.var.ext_reg$`F3(.35)`  <- NULL
CORN.var.ext_reg$CORN_NAV  <- NULL
CORN.var.ext_reg$ROLL  <- NULL
CORN.var.ext_reg$`C Jan`  <- NULL
CORN.var.ext_reg$`C 2012`  <- NULL
CORN.var.ext_reg$etf_asset_error  <- NULL
CORN.var.ext_reg$per_NAV_return  <- NULL
CORN.var.ext_reg$asset_basket  <- NULL
CORN.var.ext_reg$per_asset_return  <- NULL
CORN.var.ext_reg$Volume  <- NULL
CORN.var.ext_reg$per_ETF_return <- NULL
CORN.var.ext_reg$volume_return <- NULL
corn.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,0),include.mean = TRUE,
external.regressors = CORN.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = CORN.var.ext_reg))
setbounds(corn.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
corn.full_fit <- ugarchfit(data = CORN.xts$etf_asset_error, spec = corn.full_model_spec)
corn.full_fit
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg$backward <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT$`F2(.3)`[i] - WEAT$`F1(.35)`[i] < 1){
WEAT.mean.ext_reg$backward[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
WEAT.var.ext_reg$volume_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
WEAT.var.ext_reg$volume_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
WEAT.var.ext_reg$volume_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg$backward <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT$`F2(.3)`[i] - WEAT$`F1(.35)`[i] < 1){
WEAT.mean.ext_reg$backward[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
WEAT.var.ext_reg$volume_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1),
external.regressors = ext_reg),
mean.model = list(armaOrder = c(3,1)))
setbounds(full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100))
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
rm(list=ls())
library(readxl)
library(tidyverse)
library(ggthemes)
library(xts)
library(tidyr)
library(zoo)
library(rugarch)
#------------------------Load in Data from Excel------------------------------#
USO <- read_excel("G:/My Drive/3_Massa Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "USO", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
#-------------------Date Manipulation and Cleaning----------------------#
USO$DATE <- as.Date(USO$DATE, origin = "1899-12-30")
USO <- USO[order(USO$DATE),]
#--------------------Calculate Returns and Errors ---------------------------#
USO$per_asset_return <- log(USO$Futures/lag(USO$Futures)) * 100
USO$per_ETF_return <- log(USO$USO_MID /lag(USO$USO_MID)) * 100
USO$per_NAV_return <- log(USO$USO_NAV/lag(USO$USO_NAV)) * 100
USO$etf_asset_error <- USO$per_ETF_return - USO$per_asset_return
# Import volume data from csv
volume <- read.csv("G:/My Drive/3_Massa Research/Neff Paper/Working_Folder/Volume.csv")
# subset the dataframe to only the relevant columes
volume <- data.frame(as.Date(volume$DATE), volume$USO.Volume)
#rename the columns
colnames(volume) <- c("DATE", "Volume")
#Merge the Volume data with the other data
USO <- merge(USO, volume, by = "DATE")
USO$volume_return <-log(USO$Volume/lag(USO$Volume)) * 100
#----------------------More Date Manipulation----------------#
#Remove rows with NA
USO <- na.omit(USO)
USO <- USO %>%
mutate(Date = as.Date(DATE)) %>%
complete(Date = seq.Date(min(DATE), max(DATE), by="day"))
# Now to forward fill the date
USO <- na.locf(na.locf(USO), fromLast = TRUE)
# Remove the additional date column
USO <- subset(USO, select = -Date)
# Create an XTS object
USO.xts <- as.xts(USO, order.by = USO$DATE)
View(USO.xts)
# Full model
ext_reg <- USO.xts # creates a new xts object to hold external regressors
# The code below removes all the columns which are not external regressors.
# There must be a better way to do this
ext_reg$Date <- NULL
ext_reg$USO_MID <- NULL
ext_reg$Futures <- NULL
ext_reg$USO_NAV <- NULL
ext_reg$ROLL <- NULL
ext_reg$`CL Jan` <- NULL
ext_reg$`C 2012` <- NULL
ext_reg$`C 2020` <- NULL
ext_reg$etf_asset_error<- NULL
ext_reg$per_NAV_return <- NULL
ext_reg$per_ETF_return <- NULL
ext_reg$Volume <- NULL
View(ext_reg)
# The code below removes all the columns which are not external regressors.
# There must be a better way to do this
ext_reg$Date <- NULL
View(ext_reg)
ext_reg$DATE <- NULL
View(ext_reg)
View(ext_reg)
full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1),
external.regressors = ext_reg),
mean.model = list(armaOrder = c(2,1)))
setbounds(full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100))
# Fit the model and display results
full_fit <- ugarchfit(data = USO.xts$etf_asset_error, spec = full_model_spec)
full_fit
View(ext_reg)
