"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
USO <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "USO", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
UGA <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "UGA", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#------------------Date Manipulation and Cleaning---------------#
CORN$DATE <- as.Date(CORN$DATE, origin = "1899-12-30")  #set date
CORN <- CORN[order(CORN$DATE),] #order by date
CORN$asset_basket <- (CORN$`F1(.35)` * 0.35) + (CORN$`F2(.3)` * 0.3) + (CORN$`F3(.35)` * 0.35) #reconstruct asset basket
CORN$per_asset_return <- log(CORN$asset_basket/lag(CORN$asset_basket))* 100 # calculate percent asset basket return
CORN$per_ETF_return <- log(CORN$CORN_MID/lag(CORN$CORN_MID)) * 100#calculate percent ETF return
warning()
warnings()
UGA <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "UGA", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
warnings()
log(CORN$asset_basket/lag(CORN$asset_basket))* 100 #
CORN$asset_basket
rm(list = ls())
library(readxl)
library(tidyverse)
library(ggthemes)
library(xts)
library(tidyr)
library(zoo)
library(rugarch)
library(fpp2)
library(lubridate)
library(writexl)
library(tseries)
library(parallel)
setwd("G:/My Drive/3_Research/Neff Paper/Working_Folder")
#---- Notes
# I know what you are asking: why am I still importing all this data seperately? The answer has to do with the external variables.
# For each commodity, the prices during the roll period are taken out and then forward filled. In order to maintain the validity of
# the report variables, they need to also excluded during the roll period. Because roll periods are different for each commodity,
# the data needs to be pull seperately.
#-----------------Import Data from Excel and order------------#
CORN <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "CORN", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
SOYB <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "SOYB", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
WEAT <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "WEAT", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
USO <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "USO", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
UGA <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "UGA", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#------------------Date Manipulation and Cleaning---------------#
CORN$DATE <- as.Date(CORN$DATE, origin = "1899-12-30")  #set date
CORN <- CORN[order(CORN$DATE),] #order by date
CORN$asset_basket <- (CORN$`F1(.35)` * 0.35) + (CORN$`F2(.3)` * 0.3) + (CORN$`F3(.35)` * 0.35) #reconstruct asset basket
CORN$per_asset_return <- log(CORN$asset_basket/lag(CORN$asset_basket))* 100 # calculate percent asset basket return
CORN$per_ETF_return <- log(CORN$CORN_MID/lag(CORN$CORN_MID)) * 100#calculate percent ETF return
SOYB$DATE <- as.Date(SOYB$DATE, origin = "1899-12-30") # Set date
SOYB <- SOYB[order(SOYB$DATE),] #order by date
SOYB$asset_basket <- (SOYB$`F1(.35)` * 0.35) + (SOYB$`F2(.3)` * 0.30) + (SOYB$`F3(.35)` * 0.35)
SOYB$per_asset_return <- log(SOYB$asset_basket / lag(SOYB$asset_basket)) * 100
SOYB$per_ETF_return <- log(SOYB$SOYB_MID / lag(SOYB$SOYB_MID)) * 100
WEAT$DATE <- as.Date(WEAT$DATE, origin = "1899-12-30")  #set date
WEAT <- WEAT[order(WEAT$DATE),] #order by date
WEAT$asset_basket <- (WEAT$`F1(.35)` * 0.35) + (WEAT$`F2(.3)` * 0.3) + (WEAT$`F3(.35)` * 0.35) #reconstruct asset basket
WEAT$per_asset_return <- log(WEAT$asset_basket/lag(WEAT$asset_basket))* 100 # calculate percent asset basket return
WEAT$per_ETF_return <- log(WEAT$WEAT_MID/lag(WEAT$WEAT_MID)) * 100#calculate percent ETF return
USO$DATE <- as.Date(USO$DATE, origin = "1899-12-30")
USO <- USO[order(USO$DATE),]
USO$per_asset_return <- log(USO$Futures/lag(USO$Futures)) * 100
USO$per_ETF_return <- log(USO$USO_MID /lag(USO$USO_MID)) * 100
UGA$DATE <- as.Date(UGA$DATE, origin = "1899-12-30")
UGA <- UGA[order(UGA$DATE),]
UGA$per_asset_return <- log(UGA$Futures/lag(UGA$Futures)) * 100
UGA$per_ETF_return <- log(UGA$UGA_MID/lag(UGA$UGA_MID)) * 100
#  Volume data ------------------------------------------------------------------------
volume <- read.csv("G:/My Drive/3_Research/Neff Paper/Working_Folder/Volume.csv")
# subset the dataframe to only the relevant columes
corn.volume <- data.frame(as.Date(volume$DATE), volume$CORN.Volume)
#rename the columns
colnames(corn.volume) <- c("DATE", "Volume")
#Merge the Volume data with the other data
CORN <- merge(CORN, corn.volume, by = "DATE")
# calculate percent change in volume
CORN$volume_return <-log(CORN$Volume/lag(CORN$Volume)) * 100
soyb.volume <- data.frame(as.Date(volume$DATE), volume$SOYB.Volume)
colnames(soyb.volume) <- c("DATE", "Volume")
SOYB <- merge(SOYB, soyb.volume, by = "DATE")
SOYB$volume_return <-log(SOYB$Volume/lag(SOYB$Volume)) * 100
weat.volume <- data.frame(as.Date(volume$DATE), volume$WEAT.Volume)
colnames(weat.volume) <- c("DATE", "Volume")
WEAT <- merge(WEAT, weat.volume, by = "DATE")
WEAT$volume_return <-log(WEAT$Volume/lag(WEAT$Volume)) * 100
uso.volume <- data.frame(as.Date(volume$DATE), volume$USO.Volume)
colnames(uso.volume) <- c("DATE", "Volume")
USO <- merge(USO, uso.volume, by = "DATE")
USO$volume_return <-log(USO$Volume/lag(USO$Volume)) * 100
uga.volume <- data.frame(as.Date(volume$DATE), volume$UGA.Volume)
colnames(uga.volume) <- c("DATE", "Volume")
UGA <- merge(UGA, uga.volume, by = "DATE")
UGA$volume_return <-log(UGA$Volume/lag(UGA$Volume)) * 100
#--- More data cleaning
# The code below handles the issue of roll dates
CORN <- na.omit(CORN)
CORN <- CORN[!(CORN$ROLL == 1),] #directly remove roll
CORN.xts <- xts(CORN[,-1], order.by = CORN$DATE)
SOYB <- na.omit(SOYB)
SOYB <- SOYB[!(SOYB$ROLL == 1),]
SOYB.xts <- xts(SOYB[,-1], order.by = SOYB$DATE) #create xts object
WEAT <- na.omit(WEAT)
WEAT <- WEAT[!(WEAT$ROLL == 1),]
WEAT.xts <- xts(WEAT[,-1], order.by = WEAT$DATE)
USO <- na.omit(USO)
USO <- USO[!(USO$ROLL == 1),]
USO.xts <- as.xts(USO, order.by = USO$DATE)
UGA <- na.omit(UGA)
UGA <- UGA[!(UGA$ROLL == 1),]
UGA.xts <- xts(UGA[,-1], order.by = UGA$DATE)
#---- LM OLS Models
corn.ols <- lm(CORN$per_ETF_return ~ CORN$per_asset_return)
CORN$etf_asset_error <- corn.ols$residuals  # The residuals of the model are the tracking error
CORN.xts$etf_asset_error <- corn.ols$residuals
summary(corn.ols)
adf.test(corn.ols$residuals)
soyb.ols <- lm(SOYB$per_ETF_return ~ SOYB$per_asset_return)
SOYB$etf_asset_error <- soyb.ols$residuals
summary(soyb.ols)
adf.test(soyb.ols$residuals)
weat.ols <- lm(WEAT$per_ETF_return ~ WEAT$per_asset_return)
WEAT$etf_asset_error <- weat.ols$residuals
summary(weat.ols)
adf.test(soyb.ols$residuals)
uso.ols <- lm(USO$per_ETF_return ~USO$per_asset_return)
USO$etf_asset_error <- uso.ols$residuals
summary(uso.ols)
adf.test(uso.ols$residuals)
uga.ols <- lm(UGA$per_ETF_return ~ UGA$per_asset_return)
UGA$etf_asset_error <- uga.ols$residuals
summary(uga.ols)
adf.test(uga.ols$residuals)
#--- ETF Returns
summary(corn.ols)
plot(CORN$per_asset_return, CORN$per_ETF_return)
line(x = CORN$per_asset_return, y =CORN$per_ETF_return)
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$DATE, CORN$per_ETF_return, type = "l", main = "CORN",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(SOYB$DATE, SOYB$per_ETF_return, type = "l", main = "SOYB",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(WEAT$DATE, WEAT$per_ETF_return, type = "l", main = "WEAT",
xlab = "", ylab = "Percent Return", ylim = c(-10, 10))
plot(USO$DATE, USO$per_ETF_return, type = "l", main = "USO",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(UGA$DATE, UGA$per_ETF_return, type = "l", main = "UGA",
xlab = "", ylab = "", ylim = c(-10, 10))
dev.off()
#-- Asset Returns
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$DATE, CORN$per_asset_return, type = "l", main = "CORN",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(SOYB$DATE, SOYB$per_asset_return, type = "l", main = "SOYB",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(WEAT$DATE, WEAT$per_asset_return, type = "l", main = "WEAT",
xlab = "", ylab = "Percent Return", ylim = c(-10, 10))
plot(USO$DATE, USO$per_asset_return, type = "l", main = "USO",
xlab = "", ylab = "", ylim = c(-10, 10))
plot(UGA$DATE, UGA$per_asset_return, type = "l", main = "UGA",
xlab = "", ylab = "", ylim = c(-10, 10))
#--Tracking Error
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$DATE, CORN$etf_asset_error, type = "l", main = "CORN",
xlab = "", ylab = "", ylim = c(-5, 5))
plot(SOYB$DATE, SOYB$etf_asset_error, type = "l", main = "SOYB",
xlab = "", ylab = "", ylim = c(-5, 5))
plot(WEAT$DATE, WEAT$etf_asset_error, type = "l", main = "WEAT",
xlab = "", ylab = "Percent Error", ylim = c(-5, 5))
plot(USO$DATE, USO$etf_asset_error, type = "l", main = "USO",
xlab = "", ylab = "", ylim = c(-5, 5))
plot(UGA$DATE, UGA$etf_asset_error, type = "l", main = "UGA",
xlab = "", ylab = "", ylim = c(-5, 5))
#--Squared Tracking Error
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), archm = TRUE))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_fit
ggAcf(SOYB$etf_asset_error)
dev.off()
ggAcf(SOYB$etf_asset_error)
ggtsdisplay(SOYB$etf_asset_error)
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,1), archm = TRUE))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,1)))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_fit
weat.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,5)))
weat.base_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.base_model_spec,
solver = 'hybrid')
weat.base_fit
#SOYB
SOYB.mean.ext_reg <- SOYB.xts[, c('per_asset_return')]
SOYB.mean.ext_reg$backward <- 0
for(i in 1:nrow(SOYB.mean.ext_reg)){
if(SOYB$`F2(.3)`[i] - SOYB$`F1(.35)`[i] < 1){
SOYB.mean.ext_reg$backward[i] <- 1
}
}
SOYB.mean.ext_reg <- as.matrix(SOYB.mean.ext_reg)
SOYB.var.ext_reg <- SOYB.xts[, c('S WASDE', 'S WASDE + CP', 'S Grain Stocks', 'S Prospective Plantings', 'S Acreage Report',
'S Cattle on Feed', 'S Hogs & Pigs', 'S Day Before Roll', 'S Day After Roll', 'per_asset_return',
'volume_return')]
SOYB.var.ext_reg <- as.matrix(SOYB.var.ext_reg)
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.var.ext_reg))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
# external.regressors = SOYB.var.ext_reg
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)))                                                 ))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
# external.regressors = SOYB.var.ext_reg
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1))                                                 ))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
# external.regressors = SOYB.var.ext_reg
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)))                                                ))
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)))                                                ))
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB.var.ext_reg[1]
))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB.var.ext_reg[,1]
))
SOYB.var.ext_reg
SOYB.var.ext_reg[,1]
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB.var.ext_reg[,1]
))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB$`S WASDE`
))
SOYB$`S WASDE`
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$`S WASDE`))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$`S WASDE`)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)), mean.mode= list(external.regressors = as.matrix(SOYB$`S WASDE`)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)), mean.model= list(external.regressors = as.matrix(SOYB$`S WASDE`)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
summary(SOYB)
summary(SOYB$per_asset_return, SOYB$per_ETF_return, SOYB$asset_basket, SOYB$SOYB_MID)
summary(c(SOYB$per_asset_return, SOYB$per_ETF_return, SOYB$asset_basket, SOYB$SOYB_MID))
summary(as.data.frame(SOYB$per_asset_return, SOYB$per_ETF_return, SOYB$asset_basket, SOYB$SOYB_MID))
summary(data.frame(SOYB$per_asset_return, SOYB$per_ETF_return, SOYB$asset_basket, SOYB$SOYB_MID))
summary(data.frame(SOYB$per_asset_return, SOYB$per_ETF_return, SOYB$asset_basket, SOYB$SOYB_MID, SOYB$etf_asset_error))
plot(SOYB$etf_asset_error, type = 'h')
dev.off()
plot(SOYB$etf_asset_error, type = 'h')
plot(SOYB$etf_asset_error, type = 'h')
plot(SOYB$etf_asset_error, type = 'hist')
hist(SOYB$etf_asset_error)
?hist
hist(SOYB$etf_asset_error, breaks = seq(0,1))
hist(SOYB$etf_asset_error, breaks = seq(-8,8,.5))
seq(-8,8,.5)
hist(SOYB$etf_asset_error, breaks = seq(-8,9,.5))
hist(SOYB$etf_asset_error, breaks = seq(-8,9,.1))
summary(CORN$etf_asset_error)
hist(CORN$etf_asset_error, breaks = seq(-1.5,2,.1))
var(CORN$etf_asset_error)
var(SOYB$etf_asset_error)
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)), mean.model= list(external.regressors = as.matrix(SOYB$per_asset_return)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$per_asset_return)))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$per_asset_return[-c(1:599)])))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$per_asset_return[-c(1:599)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[c(1:599)], spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[c(1:599)], spec = soyb.full_model_spec,
)
soyb.full_fit
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[c(1:599)], spec = soyb.full_model_spec
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$per_asset_return[-c(1:599)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[c(1:599)], spec = soyb.full_model_spec
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB$per_asset_return[-c(1:599)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec,
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB.var.ext_reg[-c(1:599),])))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = SOYB.var.ext_reg[-c(1:599),]))
SOYB.var.ext_reg[-c(1:599),]
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = matrix(OYB.var.ext_reg[-c(1:599),])))
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = matrix(SOYB.var.ext_reg[-c(1:599),])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec,
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = matrix(SOYB.var.ext_reg[-c(1:599),])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec,
)
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec
)
matrix(SOYB.var.ext_reg[-c(1:599),]
,
]
)
matrix(SOYB.var.ext_reg[-c(1:599),])
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB.var.ext_reg[-c(1:599),])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB.var.ext_reg[-c(1:599),11])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB.var.ext_reg[-c(1:599),(10:11)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error[-c(1:599)], spec = soyb.full_model_spec
)
soyb.full_fit
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB.var.ext_reg[,(10:11)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec
)
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1), external.regressors = as.matrix(SOYB.var.ext_reg[,(10:11)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec)
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec, solver = 'hybrid')
SOYB$etf_asset_error
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1))#, external.regressors = as.matrix(SOYB.var.ext_reg[,(10:11)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec, solver = 'hybrid')
# mean.model = list(armaOrder = c(0,0),include.mean = TRUE),
#
soyb.full_model_spec <- ugarchspec(variance.model = list(garchOrder = c(1,1)))#, external.regressors = as.matrix(SOYB.var.ext_reg[,(10:11)])))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec, solver = 'hybrid')
soyb.full_fit
plot(SOYB$DATE, soyb.full_fit@fit[['sigma']], type = "l", main = "SOYB",
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.base_fit@fit[['sigma']], type = "l", main = "SOYB",
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.base_fit@fit[['sigma']],
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.base_fit@fit[['sigma']], color = 'blue'
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.base_fit@fit[['sigma']], color = 'blue',
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.base_fit@fit[['sigma']], col = 'blue',
xlab = "", ylab = "")
lines(SOYB$DATE, soyb.full_fit@fit[['sigma']], col = 'red',
xlab = "", ylab = "")
