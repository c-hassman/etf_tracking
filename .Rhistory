uga.base_fit
# Base GARCH Conditional Variance
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$Date, corn.base_fit@fit[['sigma']], type = "l", main = "CORN",
xlab = "", ylab = "")
plot(SOYB$Date, soyb.base_fit@fit[['sigma']], type = "l", main = "SOYB",
xlab = "", ylab = "")
plot(WEAT$Date, weat.base_fit@fit[['sigma']], type = "l", main = "WEAT",
xlab = "", ylab = "Sigma")
plot(USO$DATE, uso.base_fit@fit[['sigma']], type = "l", main = "USO",
xlab = "", ylab = "")
plot(UGA$Date, uga.base_fit@fit[['sigma']], type = "l", main = "UGA",
xlab = "", ylab = "")
# Base GARCH Residuals
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$Date, corn.base_fit@fit[['residuals']], type = "l", main = "CORN",
xlab = "", ylab = "")
plot(SOYB$Date, soyb.base_fit@fit[['residuals']], type = "l", main = "SOYB",
xlab = "", ylab = "")
plot(WEAT$Date, weat.base_fit@fit[['residuals']], type = "l", main = "WEAT",
xlab = "", ylab = "Percent Error Squared")
plot(USO$DATE, uso.base_fit@fit[['residuals']], type = "l", main = "USO",
xlab = "", ylab = "")
plot(UGA$Date, uga.base_fit@fit[['residuals']], type = "l", main = "UGA",
xlab = "", ylab = "")
# Base GARCH Squared Residuals
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$Date, corn.base_fit@fit[['residuals']]^2, type = "l", main = "CORN",
xlab = "", ylab = "")
plot(SOYB$Date, soyb.base_fit@fit[['residuals']]^2, type = "l", main = "SOYB",
xlab = "", ylab = "")
plot(WEAT$Date, weat.base_fit@fit[['residuals']]^2, type = "l", main = "WEAT",
xlab = "", ylab = "Percent Error Squared")
plot(USO$DATE, uso.base_fit@fit[['residuals']]^2, type = "l", main = "USO",
xlab = "", ylab = "")
plot(UGA$Date, uga.base_fit@fit[['residuals']]^2, type = "l", main = "UGA",
xlab = "", ylab = "")
# Base GARCH Residual diagnostic
corn.s <- corn.base_fit@fit[['residuals']] / corn.base_fit@fit[['sigma']]
soyb.s <- soyb.base_fit@fit[['residuals']] / soyb.base_fit@fit[['sigma']]
weat.s <- weat.base_fit@fit[['residuals']] / weat.base_fit@fit[['sigma']]
uso.s <- uso.base_fit@fit[['residuals']] / uso.base_fit@fit[['sigma']]
uga.s <- uga.base_fit@fit[['residuals']] / uga.base_fit@fit[['sigma']]
# Base Standardized GARCH Residuals
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$Date, corn.s, type = "l", main = "CORN",
xlab = "", ylab = "")
plot(SOYB$Date, soyb.s, type = "l", main = "SOYB",
xlab = "", ylab = "")
plot(WEAT$Date, weat.s, type = "l", main = "WEAT",
xlab = "", ylab = "Standardized Residuals")
plot(USO$DATE, uso.s, type = "l", main = "USO",
xlab = "", ylab = "")
plot(UGA$Date, uga.s, type = "l", main = "UGA",
xlab = "", ylab = "")
# Base Standardized GARCH Squared Residuals
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
plot(CORN$Date, corn.s^2, type = "l", main = "CORN",
xlab = "", ylab = "")
plot(SOYB$Date, soyb.s^2, type = "l", main = "SOYB",
xlab = "", ylab = "")
plot(WEAT$Date, weat.s^2, type = "l", main = "WEAT",
xlab = "", ylab = "Standardized Residuals Squared")
plot(USO$DATE, uso.s^2, type = "l", main = "USO",
xlab = "", ylab = "")
plot(UGA$Date, uga.s^2, type = "l", main = "UGA",
xlab = "", ylab = "")
# Base GARCH Residuals ACF
par(mfrow = c(3, 2), mai = c(0.25, 0.5, 0.2, 0.05))
ggAcf(corn.s)
ggAcf(weat.s)
ggAcf(uso.s)
ggAcf(uga.s)
CORN.mean.ext_reg <- CORN.xts[, c('per_asset_return', 'volume_return')]
# Now I want to add two dummy variables: one if $ asset is positive and one if negative
CORN.mean.ext_reg$pos_ind <-  0
CORN.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN.mean.ext_reg$per_asset_return[i] > 0){
CORN.mean.ext_reg$pos_ind[i] <- 1
}
else if(CORN.mean.ext_reg$per_asset_return[i] < 0){
CORN.mean.ext_reg$neg_ind[i] <- 1
}
}
CORN.mean.ext_reg$backward <- 0
for(i in 1:nrow(CORN.mean.ext_reg)){
if(CORN$`F2(.3)`[i] - CORN$`F1(.35)`[i] < 1){
CORN.mean.ext_reg$backward[i] <- 1
}
}
CORN.mean.ext_reg <- as.matrix(CORN.mean.ext_reg)
# The variance equation has so many variables, I find it best to simply copy all
# and then remove the unnecessary ones
CORN.var.ext_reg <- CORN.xts
CORN.var.ext_reg$CORN_MID  <- NULL
CORN.var.ext_reg$`F1(.35)`  <- NULL
CORN.var.ext_reg$`F2(.3)`  <- NULL
CORN.var.ext_reg$`F3(.35)`  <- NULL
CORN.var.ext_reg$CORN_NAV  <- NULL
CORN.var.ext_reg$ROLL  <- NULL
CORN.var.ext_reg$`C Jan`  <- NULL
CORN.var.ext_reg$`C 2012`  <- NULL
CORN.var.ext_reg$etf_asset_error  <- NULL
CORN.var.ext_reg$per_NAV_return  <- NULL
CORN.var.ext_reg$asset_basket  <- NULL
CORN.var.ext_reg$per_asset_return  <- NULL
CORN.var.ext_reg$Volume  <- NULL
CORN.var.ext_reg$per_ETF_return <- NULL
CORN.var.ext_reg$volume_return <- NULL
corn.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,0),include.mean = TRUE,
external.regressors = CORN.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = CORN.var.ext_reg))
setbounds(corn.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
corn.full_fit <- ugarchfit(data = CORN.xts$etf_asset_error, spec = corn.full_model_spec)
corn.full_fit
robust_coef <- as.data.frame(corn.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg$per_asset_return[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg$backward <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT$`F2(.3)`[i] - WEAT$`F1(.35)`[i] < 1){
WEAT.mean.ext_reg$backward[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
WEAT.var.ext_reg$volume_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
USO.mean.ext_reg <- USO.xts[,c('per_asset_return')]
USO.mean.ext_reg$pos_ind <- 0
USO.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(USO.mean.ext_reg)){
if(USO.mean.ext_reg$per_asset_return[i] > 0){
USO.mean.ext_reg$pos_ind[i] <- 1
}
else if(USO.mean.ext_reg$per_asset_return[i] < 0){
USO.mean.ext_reg$neg_ind[i] <- 1
}
}
USO.mean.ext_reg <- as.matrix(USO.mean.ext_reg)
USO.var.ext_reg <- USO.xts
USO.var.ext_reg$Date <- NULL
USO.var.ext_reg$USO_MID <- NULL
USO.var.ext_reg$Futures <- NULL
USO.var.ext_reg$USO_NAV <- NULL
USO.var.ext_reg$ROLL <- NULL
USO.var.ext_reg$`CL Jan` <- NULL
USO.var.ext_reg$`CL 2013` <- NULL
USO.var.ext_reg$`CL 2014` <- NULL
USO.var.ext_reg$`CL 2020` <- NULL
USO.var.ext_reg$etf_asset_error<- NULL
USO.var.ext_reg$per_NAV_return <- NULL
USO.var.ext_reg$per_ETF_return <- NULL
USO.var.ext_reg$Volume <- NULL
USO.var.ext_reg$DATE <- NULL
#USO.var.ext_reg$volume_return <- NULL
USO.var.ext_reg$per_asset_return <- NULL
uso.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(2,1), include.mean = TRUE, archm = TRUE,
external.regressors = USO.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = USO.var.ext_reg))
setbounds(uso.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
uso.full_fit <- ugarchfit(data = USO.xts$etf_asset_error, spec = uso.full_model_spec)
uso.full_fit
robust_coef <- as.data.frame(uso.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
UGA.mean.ext_reg <- UGA.xts[,c('per_asset_return', 'volume_return')]
UGA.mean.ext_reg$pos_ind <- 0
UGA.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(UGA.mean.ext_reg)){
if(UGA.mean.ext_reg$per_asset_return[i] > 0){
UGA.mean.ext_reg$pos_ind[i] <- 1
}
else if(UGA.mean.ext_reg$per_asset_return[i] < 0){
UGA.mean.ext_reg$neg_ind[i] <- 1
}
}
UGA.mean.ext_reg <- as.matrix(UGA.mean.ext_reg)
UGA.var.ext_reg <- USO.xts
UGA.var.ext_reg$Date <- NULL
UGA.var.ext_reg$USO_MID <- NULL
UGA.var.ext_reg$Futures <- NULL
UGA.var.ext_reg$USO_NAV <- NULL
UGA.var.ext_reg$ROLL <- NULL
UGA.var.ext_reg$`CL Jan` <- NULL
UGA.var.ext_reg$`CL 2012` <- NULL
UGA.var.ext_reg$etf_asset_error<- NULL
UGA.var.ext_reg$per_NAV_return <- NULL
UGA.var.ext_reg$per_ETF_return <- NULL
UGA.var.ext_reg$Volume <- NULL
UGA.var.ext_reg$DATE <- NULL
UGA.var.ext_reg$volume_return <- NULL
UGA.var.ext_reg$per_asset_return <- NULL
UGA.var.ext_reg <- as.matrix(UGA.var.ext_reg)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE,
external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = UGA.var.ext_reg))
setbounds(uga.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE,
external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = UGA.var.ext_reg))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE),
variance.model = list(garchOrder = c(1,1)))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
huga.full_fit
uga.full_fit
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE, external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1)))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
View(UGA.var.ext_reg)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE, external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
UGA.mean.ext_reg <- UGA.xts[,c('per_asset_return', 'volume_return')]
UGA.mean.ext_reg$pos_ind <- 0
UGA.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(UGA.mean.ext_reg)){
if(UGA.mean.ext_reg$per_asset_return[i] > 0){
UGA.mean.ext_reg$pos_ind[i] <- 1
}
else if(UGA.mean.ext_reg$per_asset_return[i] < 0){
UGA.mean.ext_reg$neg_ind[i] <- 1
}
}
UGA.mean.ext_reg <- as.matrix(UGA.mean.ext_reg)
UGA.var.ext_reg <- UGA.xts
UGA.var.ext_reg$Date <- NULL
UGA.var.ext_reg$USO_MID <- NULL
UGA.var.ext_reg$Futures <- NULL
UGA.var.ext_reg$USO_NAV <- NULL
UGA.var.ext_reg$ROLL <- NULL
UGA.var.ext_reg$`CL Jan` <- NULL
UGA.var.ext_reg$`CL 2012` <- NULL
UGA.var.ext_reg$etf_asset_error<- NULL
UGA.var.ext_reg$per_NAV_return <- NULL
UGA.var.ext_reg$per_ETF_return <- NULL
UGA.var.ext_reg$Volume <- NULL
UGA.var.ext_reg$DATE <- NULL
UGA.var.ext_reg$volume_return <- NULL
UGA.var.ext_reg$per_asset_return <- NULL
UGA.var.ext_reg <- as.matrix(UGA.var.ext_reg)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE, external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
setbounds(uga.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
View(UGA.var.ext_reg)
UGA.mean.ext_reg <- UGA.xts[,c('per_asset_return', 'volume_return')]
UGA.mean.ext_reg$pos_ind <- 0
UGA.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(UGA.mean.ext_reg)){
if(UGA.mean.ext_reg$per_asset_return[i] > 0){
UGA.mean.ext_reg$pos_ind[i] <- 1
}
else if(UGA.mean.ext_reg$per_asset_return[i] < 0){
UGA.mean.ext_reg$neg_ind[i] <- 1
}
}
UGA.mean.ext_reg <- as.matrix(UGA.mean.ext_reg)
UGA.var.ext_reg <- UGA.xts
UGA.var.ext_reg$Date <- NULL
UGA.var.ext_reg$UGA_MID <- NULL
UGA.var.ext_reg$Futures <- NULL
UGA.var.ext_reg$UGA_NAV <- NULL
UGA.var.ext_reg$ROLL <- NULL
UGA.var.ext_reg$`RB Jan` <- NULL
UGA.var.ext_reg$`RB 2012` <- NULL
UGA.var.ext_reg$etf_asset_error<- NULL
UGA.var.ext_reg$per_NAV_return <- NULL
UGA.var.ext_reg$per_ETF_return <- NULL
UGA.var.ext_reg$Volume <- NULL
UGA.var.ext_reg$DATE <- NULL
UGA.var.ext_reg$volume_return <- NULL
UGA.var.ext_reg$per_asset_return <- NULL
View(USO.var.ext_reg)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE, external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
setbounds(uga.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
View(UGA.var.ext_reg)
View(UGA.var.ext_reg)
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(3,1), include.mean = TRUE, external.regressors = UGA.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
setbounds(uga.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA.xts$etf_asset_error, spec = uga.full_model_spec)
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
SOYB
SOYB.mean.ext_reg <- SOYB.xts[, c('per_asset_return')]
SOYB.mean.ext_reg <- as.matrix(SOYB.mean.ext_reg)
SOYB.var.ext_reg <- SOYB.xts[, c('S WASDE', 'S WASDE + CP', 'S Grain Stocks', 'S Prospective Plantings', 'S Acreage Report',
'S Cattle on Feed', 'S Hogs & Pigs', 'S Day Before Roll', 'S Day After Roll', 'per_asset_return',
'volume_return')]
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.var.ext_reg))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB.xts$etf_asset_error, spec = soyb.full_model_spec)
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1)))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB.xts$etf_asset_error, spec = soyb.full_model_spec)
soyb.full_fit
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.mean.ext_reg))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB.xts$etf_asset_error, spec = soyb.full_model_spec)
soyb.full_fit
SOYB
SOYB.mean.ext_reg <- SOYB.xts[, c('per_asset_return')]
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.mean.ext_reg))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB.xts$etf_asset_error, spec = soyb.full_model_spec)
soyb.full_fit
lm( CORN$per_ETF_return ~ CORN$per_asset_return)
ols <- lm( CORN$per_ETF_return ~ CORN$per_asset_return)
summary(ols)
plot(CORN$Date, ols$residuals)
plot(CORN$Date, ols$residuals)
CORN.mean.ext_reg <- CORN.xts[, c('per_asset_return', 'volume_return')]
plot(CORN$Date, ols$residuals)
plot(CORN$Date, ols$residuals, type = 'l')
(.98317 - 1)/0.003617
(.98317 - 1)/0.003671
ggAcf(ols$residuals)
tsdisplay(ols$residuals)
View(CORN.xts)
#-----------------Import Data from Excel and order------------#
CORN <- read_excel("G:/My Drive/3_Massa Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "CORN", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
#------------------Date Manipulation and Cleaning---------------#
CORN$DATE <- as.Date(CORN$DATE, origin = "1899-12-30")  #set date
CORN <- CORN[order(CORN$DATE),] #order by date
CORN$asset_basket <- (CORN$`F1(.35)` * 0.35) + (CORN$`F2(.3)` * 0.3) + (CORN$`F3(.35)` * 0.35) #reconstruct asset basket
CORN$per_asset_return <- log(CORN$asset_basket/lag(CORN$asset_basket))* 100 # calculate percent asset basket return
CORN$per_ETF_return <- log(CORN$CORN_MID/lag(CORN$CORN_MID)) * 100#calculate percent ETF return
CORN$per_NAV_return <- log(CORN$CORN_NAV/lag(CORN$CORN_NAV)) * 100#calculate percent NAV return
CORN$etf_asset_error <- CORN$per_ETF_return - CORN$per_asset_return #calculate error between ETF and Asset
View(CORN)
# WEAT
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
WEAT.mean.ext_reg$pos_ind <-  0
WEAT.mean.ext_reg$neg_ind <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT.mean.ext_reg$per_asset_return[i] > 0){
WEAT.mean.ext_reg$pos_ind[i] <- 1
}
else if(WEAT.mean.ext_reg$per_asset_return[i] < 0){
WEAT.mean.ext_reg$neg_ind[i] <- 1
}
}
WEAT.mean.ext_reg$backward <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT$`F2(.3)`[i] - WEAT$`F1(.35)`[i] < 1){
WEAT.mean.ext_reg$backward[i] <- 1
}
}
sum(WEAT.mean.ext_reg$)
sum(WEAT.mean.ext_reg$pos_ind)
sum(WEAT.mean.ext_reg$neg_ind)
nrows(WEAT.mean.ext_reg)
nrow(WEAT.mean.ext_reg)
1499 + 1626
WEAT.mean.ext_reg
WEAT.mean.ext_reg[,1]== 0
WEAT.mean.ext_reg[WEAT.mean.ext_reg[,1]== 0]
