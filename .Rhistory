write_xlsx(robust_coef, "data.xlsx")
UGA.mean.ext_reg <- UGA.xts[,c('per_asset_return')]
UGA.mean.ext_reg <- as.matrix(UGA.mean.ext_reg)
UGA.var.ext_reg <- UGA.xts
UGA.var.ext_reg$Date <- NULL
UGA.var.ext_reg$UGA_MID <- NULL
UGA.var.ext_reg$Futures <- NULL
UGA.var.ext_reg$UGA_NAV <- NULL
UGA.var.ext_reg$ROLL <- NULL
UGA.var.ext_reg$`RB Jan` <- NULL
UGA.var.ext_reg$`RB 2012` <- NULL
UGA.var.ext_reg$etf_asset_error<- NULL
UGA.var.ext_reg$per_NAV_return <- NULL
UGA.var.ext_reg$per_ETF_return <- NULL
UGA.var.ext_reg$Volume <- NULL
UGA.var.ext_reg$DATE <- NULL
#UGA.var.ext_reg$volume_return <- NULL
UGA.var.ext_reg$per_asset_return <- NULL
# , archm = TRUE , include.mean = TRUE
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,2), external.regressors = UGA.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
# , archm = TRUE , include.mean = TRUE
uga.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,2), external.regressors = UGA.mean.ext_reg),
variance.model = list(model= 'gjrGARCH', garchOrder = c(1,1), external.regressors = UGA.var.ext_reg))
setbounds(uga.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
# Fit the model and display results
uga.full_fit <- ugarchfit(data = UGA$etf_asset_error, spec = uga.full_model_spec,
solver = 'hybrid')
uga.full_fit
robust_coef <- as.data.frame(uga.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
auto.arima(WEAT$etf_asset_error, max.p = 10, max.q = 10, max.P = 10, max.Q = 10,
max.order = 30,  max.d = 0, seasonal = FALSE, stepwise = FALSE, allowdrift = FALSE,
allowmean = FALSE, parallel = TRUE)
WEAT <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "WEAT", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
WEAT$DATE <- as.Date(WEAT$DATE, origin = "1899-12-30")  #set date
WEAT <- WEAT[order(WEAT$DATE),] #order by date
WEAT$asset_basket <- (WEAT$`F1(.35)` * 0.35) + (WEAT$`F2(.3)` * 0.3) + (WEAT$`F3(.35)` * 0.35) #reconstruct asset basket
WEAT$per_asset_return <- log(WEAT$asset_basket/lag(WEAT$asset_basket))* 100 # calculate percent asset basket return
WEAT$per_ETF_return <- log(WEAT$WEAT_MID/lag(WEAT$WEAT_MID)) * 100#calculate percent ETF return
#  Volume data ------------------------------------------------------------------------
volume <- read.csv("G:/My Drive/3_Research/Neff Paper/Working_Folder/Volume.csv")
weat.volume <- data.frame(as.Date(volume$DATE), volume$WEAT.Volume)
colnames(weat.volume) <- c("DATE", "Volume")
WEAT <- merge(WEAT, weat.volume, by = "DATE")
WEAT$volume_return <-log(WEAT$Volume/lag(WEAT$Volume)) * 100
WEAT <- na.omit(WEAT)
WEAT <- WEAT[!(WEAT$ROLL == 1),]
# WEAT <- WEAT %>%
#   mutate(Date = as.Date(DATE)) %>%
#   complete(Date = seq.Date(min(DATE), max(DATE), by="day"))
# WEAT <- na.locf(na.locf(WEAT), fromLast = TRUE)
# WEAT <- subset(WEAT, select = -DATE)
WEAT.xts <- xts(WEAT[,-1], order.by = WEAT$DATE)
weat.ols <- lm(WEAT$per_ETF_return ~ WEAT$per_asset_return)
WEAT$etf_asset_error <- weat.ols$residuals
summary(weat.ols)
# FIT ARMA
x <- WEAT$etf_asset_error
mod <- arima(x, order = c(1,0,0))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,1))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,2))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,2))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,1))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(3,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(3,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(4,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
corn_error = as.matrix(CORN$etf_asset_error)
mod <- arima(x, order = c(3,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
auto.arima(WEAT$etf_asset_error, max.p = 10, max.q = 10, max.P = 10, max.Q = 10,
max.order = 30,  max.d = 0, seasonal = FALSE, stepwise = FALSE, allowdrift = FALSE,
allowmean = FALSE, parallel = TRUE)
mod <- arima(x, order = c(6,0,8))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(6,0,6))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,6))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(3,0,6))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,6))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
weat.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,5)))
weat.base_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.base_model_spec)
weat.base_fit
weat.base_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.base_model_spec,
solver = 'hybrid')
weat.base_fit
robust_coef <- as.data.frame(weat.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
#WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(4,3),include.mean = TRUE,
external.regressors = WEAT.mean.ext_reg, archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5)),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT.xts$etf_asset_error, spec = weat.full_model_spec)
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5), archm = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return')]
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return', 'volume_return')]
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
# , 'volume_return'
WEAT.mean.ext_reg <- WEAT.xts[, c('per_asset_return')]
WEAT.mean.ext_reg$backward <- 0
for(i in 1:nrow(WEAT.mean.ext_reg)){
if(WEAT$`F2(.3)`[i] - WEAT$`F1(.35)`[i] < 1){
WEAT.mean.ext_reg$backward[i] <- 1
}
}
WEAT.mean.ext_reg <- as.matrix(WEAT.mean.ext_reg)
WEAT.var.ext_reg <- WEAT.xts
WEAT.var.ext_reg$WEAT_MID  <- NULL
WEAT.var.ext_reg$`F1(.35)`  <- NULL
WEAT.var.ext_reg$`F2(.3)`  <- NULL
WEAT.var.ext_reg$`F3(.35)`  <- NULL
WEAT.var.ext_reg$WEAT_NAV  <- NULL
WEAT.var.ext_reg$ROLL  <- NULL
WEAT.var.ext_reg$`W Jan`  <- NULL
WEAT.var.ext_reg$`W 2012`  <- NULL
WEAT.var.ext_reg$etf_asset_error  <- NULL
WEAT.var.ext_reg$per_NAV_return  <- NULL
WEAT.var.ext_reg$asset_basket  <- NULL
WEAT.var.ext_reg$per_asset_return  <- NULL
WEAT.var.ext_reg$Volume  <- NULL
WEAT.var.ext_reg$per_ETF_return <- NULL
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), model = 'gjrGARCH'
external.regressors = WEAT.var.ext_reg))
weat.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(1,5),external.regressors = WEAT.mean.ext_reg),
variance.model = list(garchOrder = c(1,1), model = 'gjrGARCH',
external.regressors = WEAT.var.ext_reg))
setbounds(weat.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), vxreg11 = c(-100,100), vxreg12 = c(-100,100),
vxreg13 = c(-100,100), vxreg14 = c(-100,100), vxreg15 = c(-100,100), vxreg16 = c(-100,100),
vxreg17 = c(-100,100), vxreg18 = c(-100,100), vxreg19 = c(-100,100), vxreg20 = c(-100,100),
vxreg21 = c(-100,100), vxreg22 = c(-100,100), vxreg23 = c(-100,100), vxreg24 = c(-100,100),
vxreg25 = c(-100,100), vxreg26 = c(-100,100), vxreg28 = c(-100,100), vxreg29 = c(-100,100),
vxreg30 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
weat.full_fit <- ugarchfit(data = WEAT$etf_asset_error, spec = weat.full_model_spec,
solver = 'hybrid')
weat.full_fit
robust_coef <- as.data.frame(weat.full_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
SOYB <- read_excel("G:/My Drive/3_Research/Neff Paper/Working_Folder/Data_Update.xlsx",
sheet = "SOYB", col_types = c("numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
SOYB$DATE <- as.Date(SOYB$DATE, origin = "1899-12-30") # Set date
SOYB <- SOYB[order(SOYB$DATE),] #order by date
SOYB$asset_basket <- (SOYB$`F1(.35)` * 0.35) + (SOYB$`F2(.3)` * 0.30) + (SOYB$`F3(.35)` * 0.35)
SOYB$per_asset_return <- log(SOYB$asset_basket / lag(SOYB$asset_basket)) * 100
SOYB$per_ETF_return <- log(SOYB$SOYB_MID / lag(SOYB$SOYB_MID)) * 100
WEAT$DATE <- as.Date(WEAT$DATE, origin = "1899-12-30")  #set date
#  Volume data ------------------------------------------------------------------------
volume <- read.csv("G:/My Drive/3_Research/Neff Paper/Working_Folder/Volume.csv")
# subset the dataframe to only the relevant columes
corn.volume <- data.frame(as.Date(volume$DATE), volume$CORN.Volume)
#rename the columns
colnames(corn.volume) <- c("DATE", "Volume")
#Merge the Volume data with the other data
CORN <- merge(CORN, corn.volume, by = "DATE")
# calculate percent change in volume
CORN$volume_return <-log(CORN$Volume/lag(CORN$Volume)) * 100
soyb.volume <- data.frame(as.Date(volume$DATE), volume$SOYB.Volume)
colnames(soyb.volume) <- c("DATE", "Volume")
SOYB <- merge(SOYB, soyb.volume, by = "DATE")
SOYB$volume_return <-log(SOYB$Volume/lag(SOYB$Volume)) * 100
SOYB <- na.omit(SOYB)
SOYB <- SOYB[!(SOYB$ROLL == 1),]
#SOYB <-SOYB %>%
#  mutate(Date = as.Date(DATE)) %>%
#  complete(Date = seq.Date(min(DATE), max(DATE), by = "day"))
#SOYB <- na.locf(na.locf(SOYB), fromLast = TRUE) #forward fill the date
# SOYB <- subset(SOYB, select = -DATE) #remove redundant date column
SOYB.xts <- xts(SOYB[,-1], order.by = SOYB$Date) #create xts object
#SOYB <-SOYB %>%
#  mutate(Date = as.Date(DATE)) %>%
#  complete(Date = seq.Date(min(DATE), max(DATE), by = "day"))
#SOYB <- na.locf(na.locf(SOYB), fromLast = TRUE) #forward fill the date
# SOYB <- subset(SOYB, select = -DATE) #remove redundant date column
SOYB.xts <- xts(SOYB[,-1], order.by = SOYB$DATE) #create xts object
soyb.ols <- lm(SOYB$per_ETF_return ~ SOYB$per_asset_return)
SOYB$etf_asset_error <- soyb.ols$residuals
summary(soyb.ols)
adf.test(soyb.ols$residuals)
# FIT ARMA
x <- SOYB$etf_asset_error
mod <- arima(x, order = c(1,0,0))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,1))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,2))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(1,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,4))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,5))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
mod <- arima(x, order = c(3,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(4,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(8,0,6))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(3,0,3))
checkresiduals(mod)
Box.test(mod$residuals^2, type = 'Ljung-Box')
mod <- arima(x, order = c(2,0,3))
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(2,3)))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec)
soyb.base_fit
robust_coef <- as.data.frame(soyb.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
write_xlsx(robust_coef, "data.xlsx")
u
robust_coef <- as.data.frame(soyb.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(2,3)))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec)
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_fit
robust_coef <- as.data.frame(soyb.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,1)))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_fit
soyb.base_model_spec <- ugarchspec(variance.model = list( garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,1)))
soyb.base_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.base_model_spec,
solver = 'hybrid')
soyb.base_fit
robust_coef <- as.data.frame(soyb.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
robust_coef <- as.data.frame(soyb.base_fit@fit[['robust.matcoef']])
write_xlsx(robust_coef, "data.xlsx")
#SOYB
SOYB.mean.ext_reg <- SOYB.xts[, c('per_asset_return')]
SOYB.mean.ext_reg$backward <- 0
for(i in 1:nrow(SOYB.mean.ext_reg)){
if(SOYB$`F2(.3)`[i] - SOYB$`F1(.35)`[i] < 1){
SOYB.mean.ext_reg$backward[i] <- 1
}
}
SOYB.mean.ext_reg <- as.matrix(SOYB.mean.ext_reg)
SOYB.var.ext_reg <- SOYB.xts[, c('S WASDE', 'S WASDE + CP', 'S Grain Stocks', 'S Prospective Plantings', 'S Acreage Report',
'S Cattle on Feed', 'S Hogs & Pigs', 'S Day Before Roll', 'S Day After Roll', 'per_asset_return',
'volume_return')]
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(0,1),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.mean.ext_reg))
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(0,1),include.mean = TRUE,
external.regressors = SOYB.mean.ext_reg),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.var.ext_reg))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
soyb.full_model_spec <- ugarchspec(mean.model = list(armaOrder = c(0,1),include.mean = TRUE),
variance.model = list(garchOrder = c(1,1),
external.regressors = SOYB.var.ext_reg))
setbounds(soyb.full_model_spec) <- list(vxreg1 = c(-100,100), vxreg2 = c(-100,100), vxreg3 = c(-100,100), vxreg4 = c(-100,100),
vxreg5 = c(-100,100), vxreg6 = c(-100,100), vxreg7 = c(-100,100), vxreg8 = c(-100,100),
vxreg9 = c(-100,100), vxreg10 = c(-100,100), mxreg1 = c(-100,100), mxreg2 = c(-100,100), mxreg3 = c(-100,100),
mxreg4 = c(-100,100))
soyb.full_fit <- ugarchfit(data = SOYB$etf_asset_error, spec = soyb.full_model_spec,
solver = 'hybrid')
soyb.full_fit
